---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpong
  namespace: newfront
  labels:
    app: pingpong
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong
  template:
    metadata:
      labels:
        app: pingpong
        app.kubernetes.io/name: pingpong
        eks-cluster-name: nf-dev-eks-cluster
        newfront.com/fargate: 'true'
    spec:
      containers:
        - name: pingpong
          image: newfront/ping-pong:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          readinessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%


---
apiVersion: v1
kind: Service
metadata:
  name: pingpong
  namespace: newfront
  labels:
    app: pingpong
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: 8080
      port: 80
      # nodePort: 30080
      protocol: TCP
  selector:
    app: pingpong


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ping-pong-main-ui-route
  namespace: newfront
  annotations:
    external-dns.alpha.kubernetes.io/exclude: 'true'
spec:
  ingressClassName: kong
  rules:
    - host: kong.dev.internal
      http:
        paths:
          - path: /ping
            pathType: Exact
            backend:
              service:
                name: pingpong
                port:
                  number: 80